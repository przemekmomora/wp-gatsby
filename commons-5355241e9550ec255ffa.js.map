{"version":3,"file":"commons-5355241e9550ec255ffa.js","mappings":"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","sources":["webpack://gatsby-starter-wordpress-homepage/./node_modules/camelcase/index.js","webpack://gatsby-starter-wordpress-homepage/../src/image-utils.ts","webpack://gatsby-starter-wordpress-homepage/../src/components/hooks.ts","webpack://gatsby-starter-wordpress-homepage/../src/components/layout-wrapper.tsx","webpack://gatsby-starter-wordpress-homepage/../src/components/picture.tsx","webpack://gatsby-starter-wordpress-homepage/../src/components/placeholder.tsx","webpack://gatsby-starter-wordpress-homepage/../src/components/main-image.tsx","webpack://gatsby-starter-wordpress-homepage/../src/components/gatsby-image.server.tsx","webpack://gatsby-starter-wordpress-homepage/../src/components/gatsby-image.browser.tsx","webpack://gatsby-starter-wordpress-homepage/../src/components/static-image.server.tsx","webpack://gatsby-starter-wordpress-homepage/../src/components/static-image.tsx","webpack://gatsby-starter-wordpress-homepage/./node_modules/is-absolute-url/index.js","webpack://gatsby-starter-wordpress-homepage/./src/components/ui.css.ts","webpack://gatsby-starter-wordpress-homepage/./src/components/ui.js"],"sourcesContent":["'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\nconst ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/;\n\n// Windows paths like `c:\\`\nconst WINDOWS_PATH_REGEX = /^[a-zA-Z]:\\\\/;\n\nexport default function isAbsoluteUrl(url) {\n\tif (typeof url !== 'string') {\n\t\tthrow new TypeError(`Expected a \\`string\\`, got \\`${typeof url}\\``);\n\t}\n\n\tif (WINDOWS_PATH_REGEX.test(url)) {\n\t\treturn false;\n\t}\n\n\treturn ABSOLUTE_URL_REGEX.test(url);\n}\n","import \"src/theme.css.ts.vanilla.css!=!../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/theme.css.ts.vanilla.css\\\",\\\"source\\\":\\\"#H4sIAAAAAAAAE42Uz3KCMBDG7z7Fjl7FySYBIZ4603rz1AfoIH+srQIF26qdvns3dKZjNjmUC/DL7pewux+mb9sTfE0AougJL9vrpREGZnVdr24ZEhNCF7lysAxjZRXiumAieozGUpUOjkcsHJYYiFyyNKC7s4NSAylDmQFMGMsNKMnY1kDC5QrKlVywpIPwwIoYj6uJeTvvCHpbPxP09t7bdG/zF3sixl6J8exD4KuPxLheY0Dy3DZQnY5qzXPfAhXrKY41bjAQM3SiTIbeDSwZ+qBmMvRpYHq/gce8GaZzGOgWDVW/d4fq/J+giwGK2bRNO4dN1RzodqSXocuLygm8UtUWSezOvrBQMogWosvIDoyQE9xvQm0neyFkdXQ5uYBwynEyDqVghUdyAwqvl5ja4dBeNLki9RqKeaDLSMZQwhMoxkZzWgZGBysrwGFtj8vhLjCNSO7I7MU5GYQE7C/Aen58nskHmSkl7uZ/S1bvdg3171rqrOmlWuu1zFaT7x975/Vh/wQAAA==\\\"}!../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nimport \"src/components/ui.css.ts.vanilla.css!=!../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/components/ui.css.ts.vanilla.css\\\",\\\"source\\\":\\\"#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\\\"}!../../node_modules/@vanilla-extract/webpack-plugin/extracted.js\"\nexport var avatar = '_6694zp5h';\nexport var backgrounds = {primary:'_6694zp5e',muted:'_6694zp5f'};\nexport var blockLink = '_6694zp58';\nexport var blockquote = '_6694zp5g';\nexport var box = {center:'_6694zp2o'};\nexport var buttons = {primary:'_6694zp5a _6694zp59',reversed:'_6694zp5b _6694zp59',link:'_6694zp5c _6694zp59',linkReversed:'_6694zp5d _6694zp59'};\nexport var container = '_6694zp0';\nexport var containers = {normal:'_6694zp0',wide:'_6694zp2 _6694zp0',narrow:'_6694zp3 _6694zp0',tight:'_6694zp4 _6694zp0',fullbleed:'_6694zp5 _6694zp0'};\nexport var ctaLink = '_6694zp57';\nexport var debug = '_6694zp5q';\nexport var flex = '_6694zp6';\nexport var flexGap = {'0':'_6694zph','1':'_6694zpi','2':'_6694zpj','3':'_6694zpk','4':'_6694zpl','5':'_6694zpm','6':'_6694zpn','-1':'_6694zpo','-2':'_6694zpp','-3':'_6694zpq','-4':'_6694zpr','-5':'_6694zps','-6':'_6694zpt'};\nexport var flexVariants = {wrap:'_6694zp7',start:'_6694zp8',baseline:'_6694zp9',columnStart:'_6694zpa',column:'_6694zpb',end:'_6694zpc',stretch:'_6694zpd',spaceBetween:'_6694zpe',center:'_6694zpf',responsive:'_6694zpg'};\nexport var gutter = {'0':'_6694zp24','1':'_6694zp25','2':'_6694zp26','3':'_6694zp27','4':'_6694zp28','5':'_6694zp29','6':'_6694zp2a','-1':'_6694zp2b','-2':'_6694zp2c','-3':'_6694zp2d','-4':'_6694zp2e','-5':'_6694zp2f','-6':'_6694zp2g'};\nexport var iconLink = '_6694zp5n';\nexport var icons = {small:'_6694zp5k',medium:'_6694zp5l',large:'_6694zp5m'};\nexport var interactiveIcon = '_6694zp5o';\nexport var link = '_6694zp54';\nexport var list = '_6694zp10';\nexport var logos = {small:'_6694zp5i',medium:'_6694zp5j'};\nexport var margin = {'0':'_6694zp2q','1':'_6694zp2r','2':'_6694zp2s','3':'_6694zp2t','4':'_6694zp2u','5':'_6694zp2v','6':'_6694zp2w','-1':'_6694zp2x','-2':'_6694zp2y','-3':'_6694zp2z','-4':'_6694zp30','-5':'_6694zp31','-6':'_6694zp32',auto:'_6694zp33'};\nexport var margin0 = '_6694zp4o';\nexport var marginBottom = {'0':'_6694zp4a','1':'_6694zp4b','2':'_6694zp4c','3':'_6694zp4d','4':'_6694zp4e','5':'_6694zp4f','6':'_6694zp4g','-1':'_6694zp4h','-2':'_6694zp4i','-3':'_6694zp4j','-4':'_6694zp4k','-5':'_6694zp4l','-6':'_6694zp4m',auto:'_6694zp4n'};\nexport var marginLeft = {'0':'_6694zp34','1':'_6694zp35','2':'_6694zp36','3':'_6694zp37','4':'_6694zp38','5':'_6694zp39','6':'_6694zp3a','-1':'_6694zp3b','-2':'_6694zp3c','-3':'_6694zp3d','-4':'_6694zp3e','-5':'_6694zp3f','-6':'_6694zp3g',auto:'_6694zp3h'};\nexport var marginRight = {'0':'_6694zp3i','1':'_6694zp3j','2':'_6694zp3k','3':'_6694zp3l','4':'_6694zp3m','5':'_6694zp3n','6':'_6694zp3o','-1':'_6694zp3p','-2':'_6694zp3q','-3':'_6694zp3r','-4':'_6694zp3s','-5':'_6694zp3t','-6':'_6694zp3u',auto:'_6694zp3v'};\nexport var marginTop = {'0':'_6694zp3w','1':'_6694zp3x','2':'_6694zp3y','3':'_6694zp3z','4':'_6694zp40','5':'_6694zp41','6':'_6694zp42','-1':'_6694zp43','-2':'_6694zp44','-3':'_6694zp45','-4':'_6694zp46','-5':'_6694zp47','-6':'_6694zp48',auto:'_6694zp49'};\nexport var marginY = {'0':'_6694zp1r','1':'_6694zp1s','2':'_6694zp1t','3':'_6694zp1u','4':'_6694zp1v','5':'_6694zp1w','6':'_6694zp1x','-1':'_6694zp1y','-2':'_6694zp1z','-3':'_6694zp20','-4':'_6694zp21','-5':'_6694zp22','-6':'_6694zp23'};\nexport var media = {small:'screen and (min-width: 40em)',medium:'screen and (min-width: 52em)',large:'screen and (min-width: 64em)'};\nexport var navButtonlink = '_6694zp56';\nexport var navlink = '_6694zp55';\nexport var order = {'0':'_6694zp2k','1':'_6694zp2l','2':'_6694zp2m','3':'_6694zp2n'};\nexport var padding = {'0':'_6694zp11','1':'_6694zp12','2':'_6694zp13','3':'_6694zp14','4':'_6694zp15','5':'_6694zp16','6':'_6694zp17','-1':'_6694zp18','-2':'_6694zp19','-3':'_6694zp1a','-4':'_6694zp1b','-5':'_6694zp1c','-6':'_6694zp1d'};\nexport var paddingY = {'0':'_6694zp1e','1':'_6694zp1f','2':'_6694zp1g','3':'_6694zp1h','4':'_6694zp1i','5':'_6694zp1j','6':'_6694zp1k','-1':'_6694zp1l','-2':'_6694zp1m','-3':'_6694zp1n','-4':'_6694zp1o','-5':'_6694zp1p','-6':'_6694zp1q'};\nexport var radii = {button:'_6694zp2h',large:'_6694zp2i',circle:'_6694zp2j'};\nexport var section = '_6694zp2p';\nexport var text = {body:'_6694zp4p _6694zp4o',lead:'_6694zp4q _6694zp4o',superHeading:'_6694zp4r _6694zp4o',heading:'_6694zp4s _6694zp4o',subhead:'_6694zp4t _6694zp4o',subheadSmall:'_6694zp4u _6694zp4o',kicker:'_6694zp4v _6694zp4o',caps:'_6694zp4w _6694zp4o',stat:'_6694zp4x _6694zp4o',statLabel:'_6694zp4y _6694zp4o',small:'_6694zp4z _6694zp4o',medium:'_6694zp50 _6694zp4o',mega:'_6694zp51 _6694zp4o',center:'_6694zp52',bold:'_6694zp53'};\nexport var visuallyHidden = '_6694zp5p';\nexport var widths = {full:'_6694zpu',half:'_6694zpv',quarter:'_6694zpw',third:'_6694zpx',twothirds:'_6694zpy',fitContent:'_6694zpz'};","import { Link as GatsbyLink } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport isAbsoluteURL from \"is-absolute-url\"\nimport * as React from \"react\"\nimport * as styles from \"./ui.css\"\n\nexport const cx = (...args) => args.filter(Boolean).join(\" \")\n\nexport function Base({\n  as: Component = \"div\",\n  cx: _cx = [],\n  className,\n  ...props\n}) {\n  return <Component className={cx(..._cx, className)} {...props} />\n}\n\nexport function Container({ width = \"normal\", ...props }) {\n  return <Base cx={[styles.containers[width]]} {...props} />\n}\n\nexport function Flex({\n  variant,\n  gap = 3,\n  gutter,\n  wrap,\n  responsive,\n  marginY,\n  alignItems,\n  cx: _cx = [],\n  ...props\n}) {\n  return (\n    <Base\n      cx={[\n        styles.flex,\n        variant && styles.flexVariants[variant],\n        responsive && styles.flexVariants.responsive,\n        wrap && styles.flexVariants.wrap,\n        gutter && styles.gutter[gutter],\n        gutter ? styles.flexGap[0] : styles.flexGap[gap],\n        marginY && styles.marginY[marginY],\n        alignItems && styles.flexVariants[alignItems],\n        ..._cx,\n      ]}\n      {...props}\n    />\n  )\n}\n\nexport function Box({\n  width = \"full\",\n  background,\n  padding,\n  paddingY,\n  radius,\n  center = false,\n  order,\n  cx: _cx = [],\n  ...props\n}) {\n  return (\n    <Base\n      cx={[\n        styles.widths[width],\n        background && styles.backgrounds[background],\n        padding && styles.padding[padding],\n        paddingY && styles.paddingY[paddingY],\n        radius && styles.radii[radius],\n        center && styles.box.center,\n        order && styles.order[order],\n        ..._cx,\n      ]}\n      {...props}\n    />\n  )\n}\n\nexport function FlexList(props) {\n  return <Flex as=\"ul\" cx={[styles.list]} {...props} />\n}\n\nexport function List(props) {\n  return <Base as=\"ul\" cx={[styles.list]} {...props} />\n}\n\nexport function Space({ size = \"auto\", ...props }) {\n  return <Base cx={[styles.margin[size]]} {...props} />\n}\n\nexport function Nudge({ left, right, top, bottom, ...props }) {\n  return (\n    <Base\n      cx={[\n        left && styles.marginLeft[-left],\n        right && styles.marginRight[-right],\n        top && styles.marginTop[-top],\n        bottom && styles.marginBottom[-bottom],\n      ]}\n      {...props}\n    />\n  )\n}\n\nexport function Section(props) {\n  return <Box as=\"section\" className={styles.section} {...props} />\n}\n\nexport function Text({\n  variant = \"body\",\n  center = false,\n  bold = false,\n  ...props\n}) {\n  return (\n    <Base\n      cx={[\n        styles.text[variant],\n        center && styles.text.center,\n        bold && styles.text.bold,\n      ]}\n      {...props}\n    />\n  )\n}\n\nexport function SuperHeading({ ...props }) {\n  return <Text as=\"h1\" variant=\"superHeading\" {...props} />\n}\n\nexport function Heading({ ...props }) {\n  return <Text as=\"h2\" variant=\"heading\" {...props} />\n}\n\nexport function Subhead({ ...props }) {\n  return <Text as=\"h3\" variant=\"subhead\" {...props} />\n}\n\nexport function Kicker({ ...props }) {\n  return <Text variant=\"kicker\" {...props} />\n}\n\nexport function Link({ to, href, ...props }) {\n  const url = href || to || \"\"\n  if (isAbsoluteURL(url)) {\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a href={url} className={styles.link} {...props} />\n    )\n  }\n  return <GatsbyLink to={url} className={styles.link} {...props} />\n}\n\nexport function NavLink({ ...props }) {\n  return <Base as={Link} cx={[styles.navlink]} {...props} />\n}\n\nexport function NavButtonLink({ ...props }) {\n  return <Base as=\"button\" cx={[styles.navButtonlink]} {...props} />\n}\n\nexport function Button({ variant = \"primary\", ...props }) {\n  return <Base as={Link} cx={[styles.buttons[variant]]} {...props} />\n}\n\nexport function ButtonList({ links = [], reversed = false, ...props }) {\n  const getVariant = (i) => {\n    if (reversed) {\n      return i === 0 ? \"reversed\" : \"linkReversed\"\n    }\n    return i === 0 ? \"primary\" : \"link\"\n  }\n  return (\n    <FlexList marginY={4} {...props}>\n      {links &&\n        links.map((link, i) => (\n          <li key={link.id}>\n            <Button href={link.href} variant={getVariant(i)}>\n              {link.text}\n            </Button>\n          </li>\n        ))}\n    </FlexList>\n  )\n}\n\nexport function CTALink(props) {\n  return <Base as={Link} cx={[styles.ctaLink]} {...props} />\n}\n\nexport function LinkList({ links = [], ...props }) {\n  return (\n    <FlexList {...props}>\n      {links &&\n        links.map((link, i) => (\n          <li key={link.id}>\n            <CTALink href={link.href}>{link.text}</CTALink>\n          </li>\n        ))}\n    </FlexList>\n  )\n}\n\nexport function Blockquote(props) {\n  return <Base as=\"blockquote\" cx={[styles.blockquote]} {...props} />\n}\n\nexport function Avatar({ alt, image }) {\n  return (\n    <GatsbyImage alt={alt} image={getImage(image)} className={styles.avatar} />\n  )\n}\n\nexport function Logo({ alt, image, size = \"small\" }) {\n  return (\n    <GatsbyImage\n      alt={alt}\n      image={getImage(image)}\n      className={styles.logos[size]}\n    />\n  )\n}\n\nexport function Icon({ alt, image, size = \"medium\" }) {\n  return (\n    <GatsbyImage\n      alt={alt}\n      image={getImage(image)}\n      className={styles.icons[size]}\n    />\n  )\n}\n\nexport function IconLink(props) {\n  return <NavLink cx={[styles.iconLink]} {...props} />\n}\n\nexport function InteractiveIcon(props) {\n  return <Base as=\"button\" cx={[styles.interactiveIcon]} {...props} />\n}\n\nexport function VisuallyHidden(props) {\n  return <Base as=\"span\" cx={[styles.visuallyHidden]} {...props} />\n}\n\nexport function BlockLink(props) {\n  return <Link className={styles.blockLink} {...props} />\n}\n"],"names":["UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","Array","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","map","x","trim","filter","length","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","lastIndex","m1","charAt","_","identifier","m","postProcess","module","exports","DEFAULT_PIXEL_DENSITIES","DEFAULT_BREAKPOINTS","DEFAULT_ASPECT_RATIO","warn","message","console","sortNumeric","a","b","images","image","src","width","formatFromFilename","filename","lastIndexOf","dot","ext","setDefaultDimensions","args","layout","height","sourceMetadata","breakpoints","aspectRatio","formats","format","_extends","Math","round","generateImageSource","fit","_generateImageSource","generateImageData","pluginName","reporter","backgroundColor","placeholderURL","Set","size","has","delete","add","imgDimensions","Object","entries","erroneousUserDimensions","dim","outputPixelDensities","dedupeAndSortDensities","calculated","getDimensionsAndAspectRatio","fixedDimension","sizes","densities","density","presentationWidth","originalWidth","presentationHeight","unscaledWidth","responsiveImageSizes","result","sources","imageSizes","forEach","imageSrc","Boolean","find","img","unscaled","fallback","srcSet","getSrcSet","_result$sources","push","type","imageProps","placeholder","values","from","sort","min","includes","dimensions","imageAspectRatio","Number","MAX_SAFE_INTEGER","heightOption","widthOption","max","hasNativeLazyLoadSupport","HTMLImageElement","prototype","node","_node$images$fallback","gatsbyImageData","gatsbyImage","_node$childImageSharp","childImageSharp","getSrc","getImage","_getImage$images","_getImage","_getImage$images$fall","_getImage2","_getImage2$images","_getImage2$images$fal","wrapperStyle","className","style","getImageData","baseUrl","urlBuilder","sourceWidth","sourceHeight","props","_objectWithoutPropertiesLoose","EVERY_BREAKPOINT","getMainProps","isLoading","isLoaded","loading","shouldLoad","opacity","getPlaceholderProps","objectFit","objectPosition","position","top","left","bottom","right","transition","withArtDirection","defaultImage","artDirected","output","_excluded2","media","_output$placeholder","Sizer","React","createElement","paddingTop","maxWidth","display","alt","role","LayoutWrapper","_ref","children","Fragment","Image","decoding","Picture","_ref2","key","fallbackImage","propTypes","PropTypes","displayName","Placeholder","_Picture$propTypes","propName","componentName","Error","MainImage","removeNewLines","str","altValidator","rest","_excluded","renderImageToStringPromise","renderImage","GatsbyImageHydrator","as","class","preactClass","onStartLoad","onLoad","onError","getWrapperProps","wStyle","wClass","wrapperProps","root","useRef","useMemo","JSON","stringify","sizer","useEffect","import","then","renderImageToString","swapPlaceholderImage","ssrImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","onLoadListener","imageCache","cacheKey","animationFrame","cleanupCallback","innerHTML","requestAnimationFrame","cancelAnimationFrame","useLayoutEffect","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","GatsbyImage","memo","_getStaticImage","StaticImage","__imageData","imageData","__error","imgClassName","imgStyle","placeholderBackgroundColor","cleanedImages","checkDimensionProps","validLayouts","GatsbyImageBrowser","ABSOLUTE_URL_REGEX","WINDOWS_PATH_REGEX","avatar","backgrounds","primary","muted","blockquote","box","center","buttons","reversed","link","linkReversed","containers","normal","wide","narrow","tight","fullbleed","ctaLink","flex","flexGap","flexVariants","wrap","start","baseline","columnStart","column","end","stretch","spaceBetween","responsive","iconLink","icons","small","medium","large","interactiveIcon","list","logos","margin","auto","marginBottom","marginLeft","marginRight","marginTop","navlink","radii","button","circle","section","body","lead","superHeading","heading","subhead","subheadSmall","kicker","caps","stat","statLabel","mega","bold","visuallyHidden","widths","full","half","quarter","third","twothirds","fitContent","cx","Base","Component","_cx","Container","styles","Flex","variant","gap","gutter","marginY","alignItems","Box","background","padding","paddingY","radius","order","FlexList","Space","Nudge","Section","Text","SuperHeading","Heading","Subhead","Kicker","Link","to","href","url","isAbsoluteURL","NavLink","Button","ButtonList","links","getVariant","id","text","CTALink","LinkList","Blockquote","Avatar","G","Logo","Icon","IconLink","InteractiveIcon","VisuallyHidden"],"sourceRoot":""}